# Automatically generated
function eom(u, p, t)
    @unpack footang, g, iff, ihat, illa, ilua, irf, irla, irua, ish, ith, k1, k2, k3, k4, k5, k6, k7, k8, lff, lffo, lhat, lhato, lla, llao, lmtpxi, lrf, lrff, lrffo, lrfo, lsh, lsho, lth, ltho, ltoexi, lua, luao, mff, mhat, mlla, mlua, mrf, mrla, mrua, msh, mth, mtpb, mtpk, rmtpxi, rtoexi, u4, u5, u6, u7, u8, u9, u10, u11, u12, u13, z = p
    @inbounds q1, q2, q3, u1, u2, u3 = u

    # specified variables
    rmtp = _rmtp(t)
    ra = _ra(t)
    rk = _rk(t)
    rh = _rh(t)
    la = _la(t)
    lmtp = _lmtp(t)
    lh = _lh(t)
    lk = _lk(t)
    lkp = _lkp(t)
    lap = _lap(t)
    lhp = _lhp(t)
    lmtpp = _lmtpp(t)
    rhp = _rhp(t)
    rkp = _rkp(t)
    rap = _rap(t)
    rmtpp = _rmtpp(t)
    rs = _rs(t)
    ls = _ls(t)
    re = _re(t)
    le = _le(t)
    rkpp = _rkpp(t)
    rhpp = _rhpp(t)
    lkpp = _lkpp(t)
    lhpp = _lhpp(t)
    rapp = _rapp(t)
    lapp = _lapp(t)
    rmtppp = _rmtppp(t)
    lmtppp = _lmtppp(t)
    rsp = _rsp(t)
    lsp = _lsp(t)
    repp = _repp(t)
    rspp = _rspp(t)
    lepp = _lepp(t)
    lspp = _lspp(t)
    rep = _rep(t)
    lep = _lep(t)


    # calculated variables
    lrx1, lry1, lrx2, lry2, rrx1, rry1, rrx2, rry2 = contact_forces(u, p, t)

    # z variables
    z[1] = cos(q3)
    z[2] = sin(q3)
    z[506] = lhato * u3
    z[508] = lhat * u3
    z[16] = sin(rmtp)
    z[11] = cos(ra)
    z[8] = sin(rk)
    z[3] = cos(rh)
    z[4] = sin(rh)
    z[58] = z[3] * z[2] - z[4] * z[1]
    z[7] = cos(rk)
    z[57] = z[3] * z[1] + z[4] * z[2]
    z[63] = z[8] * z[58] - z[7] * z[57]
    z[12] = sin(ra)
    z[61] = -(z[7]) * z[58] - z[8] * z[57]
    z[67] = -(z[11]) * z[63] - z[12] * z[61]
    z[15] = cos(rmtp)
    z[65] = z[12] * z[63] - z[11] * z[61]
    z[73] = z[16] * z[67] - z[15] * z[65]
    z[13] = cos(la)
    z[17] = cos(lmtp)
    z[14] = sin(la)
    z[18] = sin(lmtp)
    z[29] = z[13] * z[17] - z[14] * z[18]
    z[5] = cos(lh)
    z[9] = cos(lk)
    z[6] = sin(lh)
    z[10] = sin(lk)
    z[32] = -(z[5]) * z[9] - z[6] * z[10]
    z[33] = z[6] * z[9] - z[5] * z[10]
    z[36] = z[32] * z[2] + z[33] * z[1]
    z[30] = -(z[13]) * z[18] - z[14] * z[17]
    z[34] = z[5] * z[10] - z[6] * z[9]
    z[38] = z[32] * z[1] + z[34] * z[2]
    z[40] = z[29] * z[36] + z[30] * z[38]
    z[51] = z[14] * z[38] - z[13] * z[36]
    z[55] = z[5] * z[2] - z[6] * z[1]
    z[209] = z[3] * z[5] + z[4] * z[6]
    z[157] = ((lkp - lap) - lhp) - lmtpp
    z[159] = lff * z[157]
    z[170] = z[18] * z[159]
    z[174] = z[17] * z[159]
    z[160] = (lkp - lap) - lhp
    z[175] = lrf * z[160]
    z[177] = z[174] - z[175]
    z[185] = z[14] * z[170] - z[13] * z[177]
    z[186] = lkp - lhp
    z[190] = lsh * z[186]
    z[192] = z[185] - z[190]
    z[181] = -(z[13]) * z[170] - z[14] * z[177]
    z[197] = z[10] * z[192] - z[9] * z[181]
    z[211] = z[3] * z[6] - z[4] * z[5]
    z[202] = -(z[9]) * z[192] - z[10] * z[181]
    z[206] = lth * lhp
    z[208] = z[202] + z[206]
    z[217] = z[209] * z[197] + z[211] * z[208]
    z[210] = z[4] * z[5] - z[3] * z[6]
    z[223] = z[209] * z[208] + z[210] * z[197]
    z[227] = lth * rhp
    z[229] = z[223] - z[227]
    z[245] = z[8] * z[217] - z[7] * z[229]
    z[246] = rkp - rhp
    z[251] = lsh * z[246]
    z[254] = z[245] + z[251]
    z[237] = -(z[7]) * z[217] - z[8] * z[229]
    z[279] = -(z[11]) * z[254] - z[12] * z[237]
    z[255] = (rkp - rap) - rhp
    z[280] = lrf * z[255]
    z[284] = z[279] + z[280]
    z[270] = z[12] * z[254] - z[11] * z[237]
    z[294] = z[16] * z[284] - z[15] * z[270]
    z[285] = lrf * z[16]
    z[167] = lff * z[18]
    z[173] = lff * z[17]
    z[176] = z[173] - lrf
    z[182] = z[14] * z[167] - z[13] * z[176]
    z[178] = -(z[13]) * z[167] - z[14] * z[176]
    z[193] = z[10] * z[182] - z[9] * z[178]
    z[198] = -(z[9]) * z[182] - z[10] * z[178]
    z[212] = z[193] * z[209] + z[198] * z[211]
    z[218] = z[193] * z[210] + z[198] * z[209]
    z[238] = z[8] * z[212] - z[7] * z[218]
    z[230] = -(z[7]) * z[212] - z[8] * z[218]
    z[272] = -(z[11]) * z[238] - z[12] * z[230]
    z[263] = z[12] * z[238] - z[11] * z[230]
    z[286] = z[16] * z[272] - z[15] * z[263]
    z[191] = z[182] - lsh
    z[194] = z[10] * z[191] - z[9] * z[178]
    z[199] = -(z[9]) * z[191] - z[10] * z[178]
    z[207] = z[199] - lth
    z[213] = z[194] * z[209] + z[207] * z[211]
    z[220] = z[194] * z[210] + z[207] * z[209]
    z[240] = z[8] * z[213] - z[7] * z[220]
    z[232] = -(z[7]) * z[213] - z[8] * z[220]
    z[274] = -(z[11]) * z[240] - z[12] * z[232]
    z[264] = z[12] * z[240] - z[11] * z[232]
    z[287] = z[16] * z[274] - z[15] * z[264]
    z[214] = z[194] * z[209] + z[199] * z[211]
    z[219] = z[194] * z[210] + z[199] * z[209]
    z[241] = z[8] * z[214] - z[7] * z[219]
    z[233] = -(z[7]) * z[214] - z[8] * z[219]
    z[275] = -(z[11]) * z[241] - z[12] * z[233]
    z[265] = z[12] * z[241] - z[11] * z[233]
    z[288] = z[16] * z[275] - z[15] * z[265]
    z[228] = lth + z[220]
    z[239] = z[8] * z[213] - z[7] * z[228]
    z[252] = lsh + z[239]
    z[231] = -(z[7]) * z[213] - z[8] * z[228]
    z[273] = -(z[11]) * z[252] - z[12] * z[231]
    z[281] = lrf + z[273]
    z[266] = z[12] * z[252] - z[11] * z[231]
    z[289] = z[16] * z[281] - z[15] * z[266]
    z[236] = lth * z[8]
    z[244] = lth * z[7]
    z[253] = lsh - z[244]
    z[271] = z[12] * z[236] - z[11] * z[253]
    z[282] = lrf + z[271]
    z[267] = z[11] * z[236] + z[12] * z[253]
    z[290] = z[16] * z[282] - z[15] * z[267]
    z[278] = lsh * z[11]
    z[283] = lrf - z[278]
    z[262] = lsh * z[12]
    z[291] = z[16] * z[283] - z[15] * z[262]
    z[35] = z[32] * z[1] - z[33] * z[2]
    z[37] = z[34] * z[1] - z[32] * z[2]
    z[39] = z[29] * z[35] + z[30] * z[37]
    z[31] = z[13] * z[18] + z[14] * z[17]
    z[41] = z[29] * z[37] + z[31] * z[35]
    z[168] = -(z[17]) * z[39] - z[18] * z[41]
    z[171] = z[18] * z[39] - z[17] * z[41]
    z[183] = z[14] * z[168] - z[13] * z[171]
    z[179] = -(z[13]) * z[168] - z[14] * z[171]
    z[195] = z[10] * z[183] - z[9] * z[179]
    z[200] = -(z[9]) * z[183] - z[10] * z[179]
    z[215] = z[209] * z[195] + z[211] * z[200]
    z[221] = z[209] * z[200] + z[210] * z[195]
    z[242] = z[8] * z[215] - z[7] * z[221]
    z[234] = -(z[7]) * z[215] - z[8] * z[221]
    z[276] = -(z[11]) * z[242] - z[12] * z[234]
    z[268] = z[12] * z[242] - z[11] * z[234]
    z[292] = z[16] * z[276] - z[15] * z[268]
    z[42] = z[29] * z[38] + z[31] * z[36]
    z[169] = -(z[17]) * z[40] - z[18] * z[42]
    z[172] = z[18] * z[40] - z[17] * z[42]
    z[184] = z[14] * z[169] - z[13] * z[172]
    z[180] = -(z[13]) * z[169] - z[14] * z[172]
    z[196] = z[10] * z[184] - z[9] * z[180]
    z[201] = -(z[9]) * z[184] - z[10] * z[180]
    z[216] = z[209] * z[196] + z[211] * z[201]
    z[222] = z[209] * z[201] + z[210] * z[196]
    z[243] = z[8] * z[216] - z[7] * z[222]
    z[235] = -(z[7]) * z[216] - z[8] * z[222]
    z[277] = -(z[11]) * z[243] - z[12] * z[235]
    z[269] = z[12] * z[243] - z[11] * z[235]
    z[293] = z[16] * z[277] - z[15] * z[269]
    z[75] = -(z[15]) * z[67] - z[16] * z[65]
    z[304] = -(z[15]) * z[284] - z[16] * z[270]
    z[305] = ((rkp - rap) - rhp) - rmtpp
    z[312] = lff * z[305]
    z[317] = z[304] + z[312]
    z[296] = -(z[15]) * z[272] - z[16] * z[263]
    z[297] = -(z[15]) * z[274] - z[16] * z[264]
    z[298] = -(z[15]) * z[275] - z[16] * z[265]
    z[299] = -(z[15]) * z[281] - z[16] * z[266]
    z[313] = lff + z[299]
    z[300] = -(z[15]) * z[282] - z[16] * z[267]
    z[314] = lff + z[300]
    z[295] = -(z[15]) * z[283] - z[16] * z[262]
    z[315] = lff + z[295]
    z[303] = lrf * z[15]
    z[316] = lff - z[303]
    z[301] = -(z[15]) * z[276] - z[16] * z[268]
    z[302] = -(z[15]) * z[277] - z[16] * z[269]
    z[59] = z[4] * z[1] - z[3] * z[2]
    z[62] = z[8] * z[57] - z[7] * z[59]
    z[60] = -(z[7]) * z[57] - z[8] * z[59]
    z[66] = -(z[11]) * z[62] - z[12] * z[60]
    z[64] = z[12] * z[62] - z[11] * z[60]
    z[72] = z[16] * z[66] - z[15] * z[64]
    z[50] = z[14] * z[37] - z[13] * z[35]
    z[54] = z[5] * z[1] + z[6] * z[2]
    z[74] = -(z[15]) * z[66] - z[16] * z[64]
    z[19] = cos(rs)
    z[20] = sin(rs)
    z[21] = cos(ls)
    z[22] = sin(ls)
    z[23] = cos(re)
    z[24] = sin(re)
    z[25] = cos(le)
    z[26] = sin(le)
    z[43] = -(z[27]) * z[13] - z[28] * z[14]
    z[45] = z[28] * z[13] - z[27] * z[14]
    z[49] = z[43] * z[38] + z[45] * z[36]
    z[53] = -(z[13]) * z[38] - z[14] * z[36]
    z[71] = z[27] * z[67] - z[28] * z[65]
    z[76] = z[19] * z[1] - z[20] * z[2]
    z[77] = z[19] * z[2] + z[20] * z[1]
    z[80] = z[23] * z[77] + z[24] * z[76]
    z[82] = z[23] * z[76] - z[24] * z[77]
    z[83] = z[21] * z[1] - z[22] * z[2]
    z[84] = z[21] * z[2] + z[22] * z[1]
    z[87] = z[25] * z[84] + z[26] * z[83]
    z[89] = z[25] * z[83] - z[26] * z[84]
    z[109] = u4 - rhp
    z[110] = u5 - lhp
    z[112] = rkpp - rhpp
    z[118] = lkpp - lhpp
    z[120] = (rkpp - rapp) - rhpp
    z[126] = (lkpp - lapp) - lhpp
    z[132] = ((rkpp - rapp) - rhpp) - rmtppp
    z[138] = ((lkpp - lapp) - lhpp) - lmtppp
    z[143] = rsp + u10
    z[144] = lsp + u11
    z[146] = repp + rspp
    z[152] = lepp + lspp
    z[158] = lffo * z[157]
    z[165] = lrfo * z[160]
    z[166] = lrffo * z[160]
    z[187] = lsho * z[186]
    z[188] = z[182] - lsho
    z[203] = ltho * lhp
    z[204] = z[199] - ltho
    z[224] = z[93] * rhp
    z[225] = z[93] + z[220]
    z[247] = z[92] * z[246]
    z[248] = z[92] + z[239]
    z[260] = z[91] * z[255]
    z[261] = lrffo * z[255]
    z[306] = z[90] * z[305]
    z[307] = z[90] + z[299]
    z[319] = z[5] * z[194] + z[6] * z[207]
    z[321] = z[5] * z[195] + z[6] * z[200]
    z[322] = z[5] * z[196] + z[6] * z[201]
    z[326] = z[5] * z[207] - z[6] * z[194]
    z[327] = z[5] * z[200] - z[6] * z[195]
    z[328] = z[5] * z[201] - z[6] * z[196]
    z[330] = lhato + z[326]
    z[331] = lhat + z[326]
    z[333] = z[19] * z[319] + z[20] * z[331]
    z[336] = z[19] * z[321] + z[20] * z[327]
    z[337] = z[19] * z[322] + z[20] * z[328]
    z[342] = z[19] * z[331] - z[20] * z[319]
    z[343] = z[19] * z[327] - z[20] * z[321]
    z[344] = z[19] * z[328] - z[20] * z[322]
    z[346] = luao * rsp
    z[347] = luao + z[342]
    z[349] = lua * rsp
    z[350] = lua + z[342]
    z[353] = z[23] * z[333] + z[24] * z[350]
    z[356] = z[23] * z[336] + z[24] * z[343]
    z[357] = z[23] * z[337] + z[24] * z[344]
    z[364] = z[23] * z[350] - z[24] * z[333]
    z[365] = z[23] * z[343] - z[24] * z[336]
    z[366] = z[23] * z[344] - z[24] * z[337]
    z[368] = rep + rsp
    z[369] = llao * z[368]
    z[371] = llao + z[364]
    z[378] = z[21] * z[319] + z[22] * z[331]
    z[381] = z[21] * z[321] + z[22] * z[327]
    z[382] = z[21] * z[322] + z[22] * z[328]
    z[387] = z[21] * z[331] - z[22] * z[319]
    z[388] = z[21] * z[327] - z[22] * z[321]
    z[389] = z[21] * z[328] - z[22] * z[322]
    z[391] = luao * lsp
    z[392] = luao + z[387]
    z[394] = lua * lsp
    z[395] = lua + z[387]
    z[398] = z[25] * z[378] + z[26] * z[395]
    z[401] = z[25] * z[381] + z[26] * z[388]
    z[402] = z[25] * z[382] + z[26] * z[389]
    z[409] = z[25] * z[395] - z[26] * z[378]
    z[410] = z[25] * z[388] - z[26] * z[381]
    z[411] = z[25] * z[389] - z[26] * z[382]
    z[413] = lep + lsp
    z[414] = llao * z[413]
    z[416] = llao + z[409]
    z[436] = lffo * z[138]
    z[437] = z[157] + u5 + u7 + u9
    z[438] = (z[158] + lffo * u3 + lffo * u5 + lffo * u7 + lffo * u9) * (u3 + z[437])
    z[439] = lff * z[138]
    z[440] = (z[159] + lff * u3 + lff * u5 + lff * u7 + lff * u9) * (u3 + z[437])
    z[441] = lrfo * z[126]
    z[442] = lrffo * z[126]
    z[443] = z[160] + u5 + u7 + u9
    z[444] = (z[165] + lrfo * u3 + lrfo * u5 + lrfo * u7 + lrfo * u9) * (u3 + z[443])
    z[445] = (z[166] + lrffo * u3 + lrffo * u5 + lrffo * u7 + lrffo * u9) * (u3 + z[443])
    z[446] = z[18] * z[439] - z[17] * z[440]
    z[447] = z[17] * z[439] + z[18] * z[440]
    z[448] = lrf * z[126]
    z[449] = z[446] + (z[175] + lrf * u3 + lrf * u5 + lrf * u7 + lrf * u9) * (u3 + z[443])
    z[450] = z[447] - z[448]
    z[451] = -(z[13]) * z[449] - z[14] * z[450]
    z[452] = z[14] * z[449] - z[13] * z[450]
    z[453] = lsho * z[118]
    z[454] = z[186] + u5 + u7
    z[455] = z[451] + (z[187] + lsho * u3 + lsho * u5 + lsho * u7) * (u3 + z[454])
    z[456] = z[452] - z[453]
    z[457] = lsh * z[118]
    z[458] = z[451] + (z[190] + lsh * u3 + lsh * u5 + lsh * u7) * (u3 + z[454])
    z[459] = z[452] - z[457]
    z[460] = z[10] * z[459] - z[9] * z[458]
    z[461] = -(z[9]) * z[459] - z[10] * z[458]
    z[462] = ltho * lhpp
    z[463] = z[460] - ((z[203] - ltho * u3) - ltho * u5) * (u3 + z[110])
    z[464] = z[462] + z[461]
    z[465] = lth * lhpp
    z[466] = z[460] - ((z[206] - lth * u3) - lth * u5) * (u3 + z[110])
    z[467] = z[465] + z[461]
    z[468] = z[209] * z[466] + z[211] * z[467]
    z[469] = z[209] * z[467] + z[210] * z[466]
    z[470] = z[93] * rhpp
    z[471] = z[468] + ((z[224] - z[93] * u3) - z[93] * u4) * (u3 + z[109])
    z[472] = z[469] - z[470]
    z[473] = lth * rhpp
    z[474] = z[468] + ((z[227] - lth * u3) - lth * u4) * (u3 + z[109])
    z[475] = z[469] - z[473]
    z[476] = -(z[7]) * z[474] - z[8] * z[475]
    z[477] = z[8] * z[474] - z[7] * z[475]
    z[478] = z[92] * z[112]
    z[479] = z[246] + u4 + u6
    z[480] = z[476] - (z[247] + z[92] * u3 + z[92] * u4 + z[92] * u6) * (u3 + z[479])
    z[481] = z[478] + z[477]
    z[482] = lsh * z[112]
    z[483] = z[476] - (z[251] + lsh * u3 + lsh * u4 + lsh * u6) * (u3 + z[479])
    z[484] = z[482] + z[477]
    z[485] = z[91] * z[120]
    z[486] = lrffo * z[120]
    z[487] = z[255] + u4 + u6 + u8
    z[488] = (z[260] + z[91] * u3 + z[91] * u4 + z[91] * u6 + z[91] * u8) * (u3 + z[487])
    z[489] = (z[261] + lrffo * u3 + lrffo * u4 + lrffo * u6 + lrffo * u8) * (u3 + z[487])
    z[490] = z[12] * z[484] - z[11] * z[483]
    z[491] = -(z[11]) * z[484] - z[12] * z[483]
    z[492] = lrf * z[120]
    z[493] = z[490] - (z[280] + lrf * u3 + lrf * u4 + lrf * u6 + lrf * u8) * (u3 + z[487])
    z[494] = z[492] + z[491]
    z[495] = z[16] * z[494] - z[15] * z[493]
    z[496] = -(z[15]) * z[494] - z[16] * z[493]
    z[497] = z[90] * z[132]
    z[498] = z[305] + u4 + u6 + u8
    z[499] = z[495] - (z[306] + z[90] * u3 + z[90] * u4 + z[90] * u6 + z[90] * u8) * (u3 + z[498])
    z[500] = z[497] + z[496]
    z[504] = z[5] * z[466] + z[6] * z[467]
    z[505] = z[5] * z[467] - z[6] * z[466]
    z[507] = z[504] - u3 * z[506]
    z[509] = z[504] - u3 * z[508]
    z[510] = z[19] * z[509] + z[20] * z[505]
    z[511] = z[19] * z[505] - z[20] * z[509]
    z[512] = luao * rspp
    z[513] = z[510] - (z[346] + luao * u10 + luao * u3) * (u3 + z[143])
    z[514] = z[512] + z[511]
    z[515] = lua * rspp
    z[516] = z[510] - (z[349] + lua * u10 + lua * u3) * (u3 + z[143])
    z[517] = z[515] + z[511]
    z[518] = z[23] * z[516] + z[24] * z[517]
    z[519] = z[23] * z[517] - z[24] * z[516]
    z[520] = llao * z[146]
    z[521] = z[368] + u10 + u12
    z[522] = z[518] - (z[369] + llao * u10 + llao * u12 + llao * u3) * (u3 + z[521])
    z[523] = z[520] + z[519]
    z[527] = z[21] * z[509] + z[22] * z[505]
    z[528] = z[21] * z[505] - z[22] * z[509]
    z[529] = luao * lspp
    z[530] = z[527] - (z[391] + luao * u11 + luao * u3) * (u3 + z[144])
    z[531] = z[529] + z[528]
    z[532] = lua * lspp
    z[533] = z[527] - (z[394] + lua * u11 + lua * u3) * (u3 + z[144])
    z[534] = z[532] + z[528]
    z[535] = z[25] * z[533] + z[26] * z[534]
    z[536] = z[25] * z[534] - z[26] * z[533]
    z[537] = llao * z[152]
    z[538] = z[413] + u11 + u13
    z[539] = z[535] - (z[414] + llao * u11 + llao * u13 + llao * u3) * (u3 + z[538])
    z[540] = z[537] + z[536]
    z[564] = z[28] * z[18] - z[27] * z[17]
    z[565] = z[27] * z[18] + z[28] * z[17]
    z[566] = -(z[27]) * z[18] - z[28] * z[17]
    z[567] = -(z[27]) * z[11] - z[28] * z[12]
    z[568] = z[27] * z[12] - z[28] * z[11]
    z[569] = z[28] * z[11] - z[27] * z[12]
    z[1164] = lrx1 + lrx2 * z[39]^2 + lrx2 * z[41]^2 + lry2 * z[39] * z[40] + lry2 * z[41] * z[42] + rrx1 * z[72] * z[292] + rrx1 * z[74] * z[301] + rrx2 * z[64] * z[268] + rrx2 * z[66] * z[276] + rry1 * z[73] * z[292] + rry1 * z[75] * z[301] + rry2 * z[65] * z[268] + rry2 * z[67] * z[276] + z[544] * (z[1] * z[327] + z[2] * z[321]) + z[545] * (z[39] * z[40] + z[41] * z[42]) + z[545] * (z[73] * z[292] + z[75] * z[301]) + z[546] * (z[87] * z[401] + z[89] * z[410]) + z[547] * (z[39] * z[40] + z[41] * z[42]) + z[547] * (z[61] * z[234] + z[63] * z[242]) + z[548] * (z[36] * z[179] + z[38] * z[183]) + z[548] * (z[61] * z[234] + z[63] * z[242]) + z[549] * (z[54] * z[200] + z[55] * z[195]) + z[549] * (z[57] * z[221] + z[58] * z[215]) + z[550] * (z[83] * z[388] + z[84] * z[381]) + z[551] * (z[80] * z[356] + z[82] * z[365]) + z[552] * (z[76] * z[343] + z[77] * z[336])
    z[1165] = lry1 + lrx2 * z[39] * z[40] + lrx2 * z[41] * z[42] + lry2 * z[40]^2 + lry2 * z[42]^2 + rrx1 * z[72] * z[293] + rrx1 * z[74] * z[302] + rrx2 * z[64] * z[269] + rrx2 * z[66] * z[277] + rry1 * z[73] * z[293] + rry1 * z[75] * z[302] + rry2 * z[65] * z[269] + rry2 * z[67] * z[277] + z[544] * (z[1] * z[328] + z[2] * z[322]) + z[545] * (z[40]^2 + z[42]^2) + z[545] * (z[73] * z[293] + z[75] * z[302]) + z[546] * (z[87] * z[402] + z[89] * z[411]) + z[547] * (z[40]^2 + z[42]^2) + z[547] * (z[61] * z[235] + z[63] * z[243]) + z[548] * (z[36] * z[180] + z[38] * z[184]) + z[548] * (z[61] * z[235] + z[63] * z[243]) + z[549] * (z[54] * z[201] + z[55] * z[196]) + z[549] * (z[57] * z[222] + z[58] * z[216]) + z[550] * (z[83] * z[389] + z[84] * z[382]) + z[551] * (z[80] * z[357] + z[82] * z[366]) + z[552] * (z[76] * z[344] + z[77] * z[337])
    z[1185] = iff * z[138]
    z[1187] = illa * z[152]
    z[1189] = irf * z[126]
    z[1191] = ish * z[118]
    z[1193] = ith * lhpp
    z[1195] = ilua * lspp
    z[1196] = iff * z[132]
    z[1198] = irla * z[146]
    z[1199] = irf * z[120]
    z[1200] = ish * z[112]
    z[1201] = ith * rhpp
    z[1203] = irua * rspp
    z[1204] = (mff * (z[289] * z[292] + z[307] * z[301]) + mhat * (z[319] * z[321] + z[330] * z[327]) + mlla * (z[398] * z[401] + z[416] * z[410]) + mlua * (z[378] * z[381] + z[392] * z[388]) + mrla * (z[353] * z[356] + z[371] * z[365]) + mrua * (z[333] * z[336] + z[347] * z[343]) + msh * (z[178] * z[179] + z[188] * z[183]) + msh * (z[231] * z[234] + z[248] * z[242]) + mth * (z[194] * z[195] + z[204] * z[200]) + mth * (z[213] * z[215] + z[225] * z[221]) + 0.5 * mrf * ((((lrfo * z[17] * z[41] - 2 * lff * z[41]) - lrffo * z[564] * z[41]) - lrffo * z[565] * z[39]) - lrfo * z[18] * z[39]) + 0.5 * mrf * (((((2 * z[231] * z[234] + 2 * z[252] * z[242]) - 2 * z[91] * z[11] * z[242]) - 2 * z[91] * z[12] * z[234]) - lrffo * z[567] * z[242]) - lrffo * z[569] * z[234])) - z[997] * z[41]
    z[1205] = mff * (z[39]^2 + z[41]^2) + mff * (z[292]^2 + z[301]^2) + mhat * (z[321]^2 + z[327]^2) + mlla * (z[401]^2 + z[410]^2) + mlua * (z[381]^2 + z[388]^2) + mrf * (z[39]^2 + z[41]^2) + mrf * (z[234]^2 + z[242]^2) + mrla * (z[356]^2 + z[365]^2) + mrua * (z[336]^2 + z[343]^2) + msh * (z[179]^2 + z[183]^2) + msh * (z[234]^2 + z[242]^2) + mth * (z[195]^2 + z[200]^2) + mth * (z[215]^2 + z[221]^2)
    z[1206] = mff * (z[39] * z[40] + z[41] * z[42]) + mff * (z[292] * z[293] + z[301] * z[302]) + mhat * (z[321] * z[322] + z[327] * z[328]) + mlla * (z[401] * z[402] + z[410] * z[411]) + mlua * (z[381] * z[382] + z[388] * z[389]) + mrf * (z[39] * z[40] + z[41] * z[42]) + mrf * (z[234] * z[235] + z[242] * z[243]) + mrla * (z[356] * z[357] + z[365] * z[366]) + mrua * (z[336] * z[337] + z[343] * z[344]) + msh * (z[179] * z[180] + z[183] * z[184]) + msh * (z[234] * z[235] + z[242] * z[243]) + mth * (z[195] * z[196] + z[200] * z[201]) + mth * (z[215] * z[216] + z[221] * z[222])
    z[1207] = (((mff * (z[292] * z[499] + z[301] * z[500]) + mhat * (z[321] * z[507] + z[327] * z[505]) + mlla * (z[401] * z[539] + z[410] * z[540]) + mlua * (z[381] * z[530] + z[388] * z[531]) + mrla * (z[356] * z[522] + z[365] * z[523]) + mrua * (z[336] * z[513] + z[343] * z[514]) + msh * (z[179] * z[455] + z[183] * z[456]) + msh * (z[234] * z[480] + z[242] * z[481]) + mth * (z[195] * z[463] + z[200] * z[464]) + mth * (z[215] * z[471] + z[221] * z[472])) - mff * (z[436] * z[41] - z[39] * z[438])) - 0.5 * mrf * (((((2 * z[439] * z[41] + z[18] * z[441] * z[39] + z[564] * z[442] * z[41] + z[565] * z[442] * z[39] + z[17] * z[39] * z[444] + z[18] * z[41] * z[444]) - z[17] * z[441] * z[41]) - 2 * z[39] * z[440]) - z[564] * z[39] * z[445]) - z[566] * z[41] * z[445])) - 0.5 * mrf * ((((((z[567] * z[486] * z[242] + z[569] * z[486] * z[234] + 2 * z[11] * z[485] * z[242] + 2 * z[12] * z[485] * z[234] + 2 * z[12] * z[242] * z[488]) - 2 * z[234] * z[483]) - 2 * z[242] * z[484]) - 2 * z[11] * z[234] * z[488]) - z[567] * z[234] * z[489]) - z[568] * z[242] * z[489])
    z[1208] = (mff * (z[289] * z[293] + z[307] * z[302]) + mhat * (z[319] * z[322] + z[330] * z[328]) + mlla * (z[398] * z[402] + z[416] * z[411]) + mlua * (z[378] * z[382] + z[392] * z[389]) + mrla * (z[353] * z[357] + z[371] * z[366]) + mrua * (z[333] * z[337] + z[347] * z[344]) + msh * (z[178] * z[180] + z[188] * z[184]) + msh * (z[231] * z[235] + z[248] * z[243]) + mth * (z[194] * z[196] + z[204] * z[201]) + mth * (z[213] * z[216] + z[225] * z[222]) + 0.5 * mrf * ((((lrfo * z[17] * z[42] - 2 * lff * z[42]) - lrffo * z[564] * z[42]) - lrffo * z[565] * z[40]) - lrfo * z[18] * z[40]) + 0.5 * mrf * (((((2 * z[231] * z[235] + 2 * z[252] * z[243]) - 2 * z[91] * z[11] * z[243]) - 2 * z[91] * z[12] * z[235]) - lrffo * z[567] * z[243]) - lrffo * z[569] * z[235])) - z[997] * z[42]
    z[1209] = mff * (z[40]^2 + z[42]^2) + mff * (z[293]^2 + z[302]^2) + mhat * (z[322]^2 + z[328]^2) + mlla * (z[402]^2 + z[411]^2) + mlua * (z[382]^2 + z[389]^2) + mrf * (z[40]^2 + z[42]^2) + mrf * (z[235]^2 + z[243]^2) + mrla * (z[357]^2 + z[366]^2) + mrua * (z[337]^2 + z[344]^2) + msh * (z[180]^2 + z[184]^2) + msh * (z[235]^2 + z[243]^2) + mth * (z[196]^2 + z[201]^2) + mth * (z[216]^2 + z[222]^2)
    z[1210] = (((mff * (z[293] * z[499] + z[302] * z[500]) + mhat * (z[322] * z[507] + z[328] * z[505]) + mlla * (z[402] * z[539] + z[411] * z[540]) + mlua * (z[382] * z[530] + z[389] * z[531]) + mrla * (z[357] * z[522] + z[366] * z[523]) + mrua * (z[337] * z[513] + z[344] * z[514]) + msh * (z[180] * z[455] + z[184] * z[456]) + msh * (z[235] * z[480] + z[243] * z[481]) + mth * (z[196] * z[463] + z[201] * z[464]) + mth * (z[216] * z[471] + z[222] * z[472])) - mff * (z[436] * z[42] - z[40] * z[438])) - 0.5 * mrf * (((((2 * z[439] * z[42] + z[18] * z[441] * z[40] + z[564] * z[442] * z[42] + z[565] * z[442] * z[40] + z[17] * z[40] * z[444] + z[18] * z[42] * z[444]) - z[17] * z[441] * z[42]) - 2 * z[40] * z[440]) - z[564] * z[40] * z[445]) - z[566] * z[42] * z[445])) - 0.5 * mrf * ((((((z[567] * z[486] * z[243] + z[569] * z[486] * z[235] + 2 * z[11] * z[485] * z[243] + 2 * z[12] * z[485] * z[235] + 2 * z[12] * z[243] * z[488]) - 2 * z[235] * z[483]) - 2 * z[243] * z[484]) - 2 * z[11] * z[235] * z[488]) - z[567] * z[235] * z[489]) - z[568] * z[243] * z[489])
    z[1217] = z[1211] + mff * (z[289]^2 + z[307]^2) + mhat * (z[319]^2 + z[330]^2) + mlla * (z[398]^2 + z[416]^2) + mlua * (z[378]^2 + z[392]^2) + mrla * (z[353]^2 + z[371]^2) + mrua * (z[333]^2 + z[347]^2) + msh * (z[178]^2 + z[188]^2) + msh * (z[231]^2 + z[248]^2) + mth * (z[194]^2 + z[204]^2) + mth * (z[213]^2 + z[225]^2) + 0.25 * mrf * ((z[1212] + 4 * z[1213] * z[564]) - 4 * z[1214] * z[17]) + 0.25 * mrf * ((((((z[1215] + 4 * z[231]^2 + 4 * z[252]^2) - 4 * z[1216]) - 8 * z[91] * z[11] * z[252]) - 8 * z[91] * z[12] * z[231]) - 4 * lrffo * z[231] * z[569]) - 4 * lrffo * z[252] * z[567])
    z[1224] = (((z[1185] + z[1187] + z[1189] + z[1191] + z[1195] + z[1196] + z[1198] + z[1199] + z[1200] + z[1203] + z[997] * z[436] + mff * (z[289] * z[499] + z[307] * z[500]) + mhat * (z[319] * z[507] + z[330] * z[505]) + mlla * (z[398] * z[539] + z[416] * z[540]) + mlua * (z[378] * z[530] + z[392] * z[531]) + mrla * (z[353] * z[522] + z[371] * z[523]) + mrua * (z[333] * z[513] + z[347] * z[514]) + msh * (z[178] * z[455] + z[188] * z[456]) + msh * (z[231] * z[480] + z[248] * z[481]) + mth * (z[194] * z[463] + z[204] * z[464]) + mth * (z[213] * z[471] + z[225] * z[472]) + 0.25 * mrf * (((((((lrffo * z[442] + lrfo * z[441] + z[1218] * z[441] + z[1219] * z[442] + 4 * lff * z[439] + 2 * lff * z[564] * z[442] + 2 * lrffo * z[564] * z[439] + z[1220] * z[444] + 2 * lff * z[18] * z[444]) - 2 * lff * z[17] * z[441]) - 2 * lrfo * z[17] * z[439]) - z[1221] * z[445]) - 2 * lff * z[566] * z[445]) - 2 * lrffo * z[565] * z[440]) - 2 * lrfo * z[18] * z[440])) - z[1193]) - z[1201]) - 0.25 * mrf * (((((((((2 * z[1218] * z[485] + 2 * z[1222] * z[486] + 2 * z[231] * z[569] * z[486] + 2 * z[252] * z[567] * z[486] + 4 * z[11] * z[252] * z[485] + 4 * z[12] * z[231] * z[485] + 2 * z[1220] * z[488] + 2 * lrffo * z[567] * z[484] + 2 * lrffo * z[569] * z[483] + 4 * z[91] * z[11] * z[484] + 4 * z[91] * z[12] * z[483] + 4 * z[12] * z[252] * z[488]) - 4 * z[91] * z[485]) - lrffo * z[486]) - 4 * z[231] * z[483]) - 4 * z[252] * z[484]) - 2 * z[1223] * z[489]) - 4 * z[11] * z[231] * z[488]) - 2 * z[231] * z[567] * z[489]) - 2 * z[252] * z[568] * z[489])
    z[1278] = z[1164] - z[1207]
    z[1279] = z[1165] - z[1210]
    z[1299] = (((((z[266] * rrx2 * z[64] + z[266] * rry2 * z[65] + z[281] * rrx2 * z[66] + z[281] * rry2 * z[67] + z[289] * rrx1 * z[72] + z[289] * rry1 * z[73] + z[313] * rrx1 * z[74] + z[313] * rry1 * z[75] + z[544] * (z[319] * z[2] + z[330] * z[1]) + z[545] * (z[289] * z[73] + z[307] * z[75]) + z[546] * (z[398] * z[87] + z[416] * z[89]) + z[548] * (z[178] * z[36] + z[188] * z[38]) + z[548] * (z[231] * z[61] + z[248] * z[63]) + z[549] * (z[194] * z[55] + z[204] * z[54]) + z[549] * (z[213] * z[58] + z[225] * z[57]) + z[550] * (z[378] * z[84] + z[392] * z[83]) + z[551] * (z[353] * z[80] + z[371] * z[82]) + z[552] * (z[333] * z[77] + z[347] * z[76])) - z[1166] * z[42]) - lff * (lrx2 * z[41] + lry2 * z[42])) - 0.5 * z[547] * (lrffo * z[49] + lrfo * z[53] + 2 * lff * z[42])) - 0.5 * z[547] * (((lrffo * z[71] - 2 * z[91] * z[67]) - 2 * z[231] * z[61]) - 2 * z[252] * z[63])) - z[1224]

    # coef
    coef11 = -(z[1205])
    coef12 = -(z[1206])
    coef13 = -(z[1204])
    coef21 = -(z[1206])
    coef22 = -(z[1209])
    coef23 = -(z[1208])
    coef31 = -(z[1204])
    coef32 = -(z[1208])
    coef33 = -(z[1217])

    # rhs
    rhs1 = -(z[1278])
    rhs2 = -(z[1279])
    rhs3 = -(z[1299])

    # set up system of equations
    coef = @SMatrix [coef11 coef12 coef13; coef21 coef22 coef23; coef31 coef32 coef33]
    rhs = @SVector [rhs1, rhs2, rhs3]

    # derivatives
    q1p = u1
    q2p = u2
    q3p = u3
    @inbounds u1p, u2p, u3p = coef \ rhs

    return @SVector [q1p, q2p, q3p, u1p, u2p, u3p]
end
