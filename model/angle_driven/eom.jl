# Automatically generated
function eom(u, p, t)
    @unpack footang, g, iff, ihat, irf, ish, ith, k1, k2, k3, k4, k5, k6, k7, k8, lff, lffo, lhat, lmtpxi, lrf, lrff, lrffo, lrfo, lsh, lsho, lth, ltho, ltoexi, mff, mhat, mrf, msh, mth, mtpb, mtpk, rmtpxi, rtoexi, u4, u5, u6, u7, u8, u9, z = p
    @inbounds q1, q2, q3, u1, u2, u3 = u

    # specified variables
    ra = _ra(t)
    rmtp = _rmtp(t)
    rh = _rh(t)
    rk = _rk(t)
    rap = _rap(t)
    rhp = _rhp(t)
    rkp = _rkp(t)
    rmtpp = _rmtpp(t)
    lmtp = _lmtp(t)
    la = _la(t)
    lk = _lk(t)
    lh = _lh(t)
    lhp = _lhp(t)
    lkp = _lkp(t)
    lap = _lap(t)
    lmtpp = _lmtpp(t)
    rhpp = _rhpp(t)
    rkpp = _rkpp(t)
    lhpp = _lhpp(t)
    lkpp = _lkpp(t)
    rapp = _rapp(t)
    lapp = _lapp(t)
    rmtppp = _rmtppp(t)
    lmtppp = _lmtppp(t)
    hato = _hato(t)
    hatop = _hatop(t)
    hatopp = _hatopp(t)


    # calculated variables
    # grf
    pop2y = q2 - lff * sin(ra + rh + rk + rmtp + q3)
    pop10y = q2 + lth * sin(lh + q3) + lsh * sin(lh + lk + q3) + lrf * sin(la + lh + lk + q3) - lth * sin(rh + q3) - lsh * sin(rh + rk + q3) - lrf * sin(ra + rh + rk + q3) - lff * sin(ra + rh + rk + rmtp + q3)
    pop11y = q2 + lth * sin(lh + q3) + lsh * sin(lh + lk + q3) + lrf * sin(la + lh + lk + q3) + lff * sin(la + lh + lk + lmtp + q3) - lth * sin(rh + q3) - lsh * sin(rh + rk + q3) - lrf * sin(ra + rh + rk + q3) - lff * sin(ra + rh + rk + rmtp + q3)

    # right foot 
    if q2 < 0.0
        dp1x = q1 - rtoexi
        rry1 = -k3 * q2 - k4 * abs(q2) * u2
        rrx1 = rry1 * (-k1 * dp1x - k2 * u1) # (-K1*(Q1-POP1XI) - K2*U1)*RY1
    else
        rrx1 = 0.0
        rry1 = 0.0
    end

    if pop2y < 0.0
        pop2x = q1 - lff * cos(ra + rh + rk + rmtp + q3)
        vop2x = u1 + lff * sin(ra + rh + rk + rmtp + q3) * (ra' + rh' + rk' + rmtp' + u3 + u4 + u6 + u8)
        vop2y = u2 - lff * cos(ra + rh + rk + rmtp + q3) * (ra' + rh' + rk' + rmtp' + u3 + u4 + u6 + u8)
        dp2x = pop2x - rmtpxi
        rry2 = -k7 * pop2y - k8 * abs(pop10y) * vop2y
        rrx2 = rry2 * (-k5 * dp2x - k6 * vop2x)
    else
        rrx2 = 0.0
        rry2 = 0.0
    end

    # left foot
    if pop11y < 0.0
        pop11x = q1 + lth * cos(lh + q3) + lsh * cos(lh + lk + q3) + lrf * cos(la + lh + lk + q3) + lff * cos(la + lh + lk + lmtp + q3) - lth * cos(rh + q3) - lsh * cos(rh + rk + q3) - lrf * cos(ra + rh + rk + q3) - lff * cos(ra + rh + rk + rmtp + q3)
        vop11x = u1 + lth * sin(rh + q3) * (rh' + u3 + u4) + lsh * sin(rh + rk + q3) * (rh' + rk' + u3 + u4 + u6) + lrf * sin(ra + rh + rk + q3) * (ra' + rh' + rk' + rmtp' + u3 + u4 + u6 + u8) + lff * sin(ra + rh + rk + rmtp + q3) * (ra' + rh' + rk' + rmtp' + u3 + u4 + u6 + u8) - lth * sin(lh + q3) * (lh' + u3 + u5) - lsh * sin(lh + lk + q3) * (lh' + lk' + u3 + u5 + u7) - lrf * sin(la + lh + lk + q3) * (la' + lh' + lk' + u3 + u5 + u7 + u9) - lff * sin(la + lh + lk + lmtp + q3) * (la' + lh' + lk' + lmtp' + u3 + u5 + u7 + u9)
        vop11y = u2 + lth * cos(lh + q3) * (lh' + u3 + u5) + lsh * cos(lh + lk + q3) * (lh' + lk' + u3 + u5 + u7) + lrf * cos(la + lh + lk + q3) * (la' + lh' + lk' + u3 + u5 + u7 + u9) + lff * cos(la + lh + lk + lmtp + q3) * (la' + lh' + lk' + lmtp' + u3 + u5 + u7 + u9) - lth * cos(rh + q3) * (rh' + u3 + u4) - lsh * cos(rh + rk + q3) * (rh' + rk' + u3 + u4 + u6) - lrf * cos(ra + rh + rk + q3) * (ra' + rh' + rk' + rmtp' + u3 + u4 + u6 + u8) - lff * cos(ra + rh + rk + rmtp + q3) * (ra' + rh' + rk' + rmtp' + u3 + u4 + u6 + u8)
        dp11x = pop11x - ltoexi
        lry1 = -k3 * pop11y - k4 * abs(q2) * vop11y
        lrx1 = lry1 * (-k1 * dp11x - k2 * vop11x) # (-K1*(Q1-POP1XI) - K2*U1)*RY1
    else
        lrx1 = 0.0
        lry1 = 0.0
    end

    if pop10y < 0.0
        pop10x = q1 + lth * cos(lh + q3) + lsh * cos(lh + lk + q3) + lrf * cos(la + lh + lk + q3) - lth * cos(rh + q3) - lsh * cos(rh + rk + q3) - lrf * cos(ra + rh + rk + q3) - lff * cos(ra + rh + rk + rmtp + q3)
        vop10x = u1 + lth * sin(rh + q3) * (rh' + u3 + u4) + lsh * sin(rh + rk + q3) * (rh' + rk' + u3 + u4 + u6) + lrf * sin(ra + rh + rk + q3) * (ra' + rh' + rk' + rmtp' + u3 + u4 + u6 + u8) + lff * sin(ra + rh + rk + rmtp + q3) * (ra' + rh' + rk' + rmtp' + u3 + u4 + u6 + u8) - lth * sin(lh + q3) * (lh' + u3 + u5) - lsh * sin(lh + lk + q3) * (lh' + lk' + u3 + u5 + u7) - lrf * sin(la + lh + lk + q3) * (la' + lh' + lk' + u3 + u5 + u7 + u9)
        vop10y = u2 + lth * cos(lh + q3) * (lh' + u3 + u5) + lsh * cos(lh + lk + q3) * (lh' + lk' + u3 + u5 + u7) + lrf * cos(la + lh + lk + q3) * (la' + lh' + lk' + u3 + u5 + u7 + u9) - lth * cos(rh + q3) * (rh' + u3 + u4) - lsh * cos(rh + rk + q3) * (rh' + rk' + u3 + u4 + u6) - lrf * cos(ra + rh + rk + q3) * (ra' + rh' + rk' + rmtp' + u3 + u4 + u6 + u8) - lff * cos(ra + rh + rk + rmtp + q3) * (ra' + rh' + rk' + rmtp' + u3 + u4 + u6 + u8)
        dp10x = pop10x - lmtpxi
        lry2 = -k7 * pop10y - k8 * abs(pop10y) * vop10y
        lrx2 = lry2 * (-k5 * dp10x - k6 * vop10x)
    else
        lrx2 = 0.0
        lry2 = 0.0
    end

    # z variables
    z[1] = cos(q3)
    z[2] = sin(q3)
    z[11] = cos(ra)
    z[15] = cos(rmtp)
    z[12] = sin(ra)
    z[16] = sin(rmtp)
    z[21] = z[11] * z[15] - z[12] * z[16]
    z[3] = cos(rh)
    z[7] = cos(rk)
    z[4] = sin(rh)
    z[8] = sin(rk)
    z[24] = z[3] * z[7] - z[4] * z[8]
    z[25] = z[3] * z[8] + z[4] * z[7]
    z[28] = z[24] * z[2] + z[25] * z[1]
    z[22] = z[11] * z[16] + z[12] * z[15]
    z[26] = -(z[3]) * z[8] - z[4] * z[7]
    z[30] = z[24] * z[1] + z[26] * z[2]
    z[32] = z[21] * z[28] + z[22] * z[30]
    z[27] = z[24] * z[1] - z[25] * z[2]
    z[29] = z[26] * z[1] - z[24] * z[2]
    z[31] = z[21] * z[27] + z[22] * z[29]
    z[23] = -(z[11]) * z[16] - z[12] * z[15]
    z[34] = z[21] * z[30] + z[23] * z[28]
    z[117] = rap + rhp + rkp + rmtpp
    z[119] = lff * z[117]
    z[33] = z[21] * z[29] + z[23] * z[27]
    z[17] = cos(lmtp)
    z[13] = cos(la)
    z[9] = cos(lk)
    z[5] = cos(lh)
    z[6] = sin(lh)
    z[50] = z[5] * z[2] + z[6] * z[1]
    z[10] = sin(lk)
    z[49] = z[5] * z[1] - z[6] * z[2]
    z[53] = z[9] * z[50] + z[10] * z[49]
    z[14] = sin(la)
    z[55] = z[9] * z[49] - z[10] * z[50]
    z[57] = z[13] * z[53] + z[14] * z[55]
    z[18] = sin(lmtp)
    z[59] = z[13] * z[55] - z[14] * z[53]
    z[65] = z[17] * z[57] + z[18] * z[59]
    z[43] = z[11] * z[28] + z[12] * z[30]
    z[47] = z[3] * z[2] + z[4] * z[1]
    z[169] = z[3] * z[5] + z[4] * z[6]
    z[130] = z[16] * z[119]
    z[134] = z[15] * z[119]
    z[135] = lrf * z[117]
    z[137] = -(z[134]) - z[135]
    z[141] = z[11] * z[130] - z[12] * z[137]
    z[145] = z[11] * z[137] + z[12] * z[130]
    z[146] = rhp + rkp
    z[150] = lsh * z[146]
    z[152] = z[145] - z[150]
    z[157] = z[7] * z[141] - z[8] * z[152]
    z[171] = z[3] * z[6] - z[4] * z[5]
    z[162] = z[7] * z[152] + z[8] * z[141]
    z[166] = lth * rhp
    z[168] = z[162] - z[166]
    z[177] = z[169] * z[157] + z[171] * z[168]
    z[170] = z[4] * z[5] - z[3] * z[6]
    z[183] = z[169] * z[168] + z[170] * z[157]
    z[187] = lth * lhp
    z[189] = z[183] + z[187]
    z[197] = z[9] * z[177] + z[10] * z[189]
    z[205] = z[9] * z[189] - z[10] * z[177]
    z[206] = lhp + lkp
    z[211] = lsh * z[206]
    z[214] = z[205] + z[211]
    z[230] = z[13] * z[197] + z[14] * z[214]
    z[239] = z[13] * z[214] - z[14] * z[197]
    z[215] = lap + lhp + lkp
    z[240] = lrf * z[215]
    z[244] = z[239] + z[240]
    z[254] = z[17] * z[230] + z[18] * z[244]
    z[129] = lff * z[16]
    z[133] = lff * z[15]
    z[136] = -lrf - z[133]
    z[138] = z[11] * z[129] - z[12] * z[136]
    z[142] = z[11] * z[136] + z[12] * z[129]
    z[151] = z[142] - lsh
    z[153] = z[7] * z[138] - z[8] * z[151]
    z[159] = z[7] * z[151] + z[8] * z[138]
    z[167] = z[159] - lth
    z[172] = z[153] * z[169] + z[167] * z[171]
    z[180] = z[153] * z[170] + z[167] * z[169]
    z[188] = lth + z[180]
    z[190] = z[9] * z[172] + z[10] * z[188]
    z[202] = z[9] * z[188] - z[10] * z[172]
    z[212] = lsh + z[202]
    z[222] = z[13] * z[190] + z[14] * z[212]
    z[235] = z[13] * z[212] - z[14] * z[190]
    z[241] = lrf + z[235]
    z[245] = z[17] * z[222] + z[18] * z[241]
    z[191] = z[9] * z[172] + z[10] * z[180]
    z[201] = z[9] * z[180] - z[10] * z[172]
    z[223] = z[13] * z[191] + z[14] * z[201]
    z[234] = z[13] * z[201] - z[14] * z[191]
    z[246] = z[17] * z[223] + z[18] * z[234]
    z[173] = z[153] * z[169] + z[159] * z[171]
    z[179] = z[153] * z[170] + z[159] * z[169]
    z[192] = z[9] * z[173] + z[10] * z[179]
    z[200] = z[9] * z[179] - z[10] * z[173]
    z[224] = z[13] * z[192] + z[14] * z[200]
    z[233] = z[13] * z[200] - z[14] * z[192]
    z[247] = z[17] * z[224] + z[18] * z[233]
    z[154] = z[7] * z[138] - z[8] * z[142]
    z[158] = z[7] * z[142] + z[8] * z[138]
    z[174] = z[154] * z[169] + z[158] * z[171]
    z[178] = z[154] * z[170] + z[158] * z[169]
    z[193] = z[9] * z[174] + z[10] * z[178]
    z[199] = z[9] * z[178] - z[10] * z[174]
    z[225] = z[13] * z[193] + z[14] * z[199]
    z[232] = z[13] * z[199] - z[14] * z[193]
    z[248] = z[17] * z[225] + z[18] * z[232]
    z[196] = lth * z[10]
    z[198] = lth * z[9]
    z[213] = lsh + z[198]
    z[226] = z[13] * z[196] + z[14] * z[213]
    z[236] = z[13] * z[213] - z[14] * z[196]
    z[242] = lrf + z[236]
    z[249] = z[17] * z[226] + z[18] * z[242]
    z[229] = lsh * z[14]
    z[231] = lsh * z[13]
    z[243] = lrf + z[231]
    z[250] = z[17] * z[229] + z[18] * z[243]
    z[253] = lrf * z[18]
    z[127] = z[15] * z[31] - z[16] * z[33]
    z[131] = z[15] * z[33] + z[16] * z[31]
    z[139] = z[11] * z[127] - z[12] * z[131]
    z[143] = z[11] * z[131] + z[12] * z[127]
    z[155] = z[7] * z[139] - z[8] * z[143]
    z[160] = z[7] * z[143] + z[8] * z[139]
    z[175] = z[169] * z[155] + z[171] * z[160]
    z[181] = z[169] * z[160] + z[170] * z[155]
    z[194] = z[9] * z[175] + z[10] * z[181]
    z[203] = z[9] * z[181] - z[10] * z[175]
    z[227] = z[13] * z[194] + z[14] * z[203]
    z[237] = z[13] * z[203] - z[14] * z[194]
    z[251] = z[17] * z[227] + z[18] * z[237]
    z[128] = z[15] * z[32] - z[16] * z[34]
    z[132] = z[15] * z[34] + z[16] * z[32]
    z[140] = z[11] * z[128] - z[12] * z[132]
    z[144] = z[11] * z[132] + z[12] * z[128]
    z[156] = z[7] * z[140] - z[8] * z[144]
    z[161] = z[7] * z[144] + z[8] * z[140]
    z[176] = z[169] * z[156] + z[171] * z[161]
    z[182] = z[169] * z[161] + z[170] * z[156]
    z[195] = z[9] * z[176] + z[10] * z[182]
    z[204] = z[9] * z[182] - z[10] * z[176]
    z[228] = z[13] * z[195] + z[14] * z[204]
    z[238] = z[13] * z[204] - z[14] * z[195]
    z[252] = z[17] * z[228] + z[18] * z[238]
    z[67] = z[17] * z[59] - z[18] * z[57]
    z[264] = z[17] * z[244] - z[18] * z[230]
    z[265] = lap + lhp + lkp + lmtpp
    z[272] = lff * z[265]
    z[277] = z[264] + z[272]
    z[256] = z[17] * z[232] - z[18] * z[225]
    z[257] = z[17] * z[233] - z[18] * z[224]
    z[258] = z[17] * z[234] - z[18] * z[223]
    z[259] = z[17] * z[241] - z[18] * z[222]
    z[273] = lff + z[259]
    z[260] = z[17] * z[242] - z[18] * z[226]
    z[274] = lff + z[260]
    z[261] = z[17] * z[243] - z[18] * z[229]
    z[275] = lff + z[261]
    z[255] = lrf * z[17]
    z[276] = lff + z[255]
    z[262] = z[17] * z[237] - z[18] * z[227]
    z[263] = z[17] * z[238] - z[18] * z[228]
    z[51] = -(z[5]) * z[2] - z[6] * z[1]
    z[52] = z[9] * z[49] + z[10] * z[51]
    z[54] = z[9] * z[51] - z[10] * z[49]
    z[56] = z[13] * z[52] + z[14] * z[54]
    z[58] = z[13] * z[54] - z[14] * z[52]
    z[64] = z[17] * z[56] + z[18] * z[58]
    z[42] = z[11] * z[27] + z[12] * z[29]
    z[46] = z[3] * z[1] - z[4] * z[2]
    z[66] = z[17] * z[58] - z[18] * z[56]
    z[35] = z[19] * z[11] - z[20] * z[12]
    z[37] = -(z[19]) * z[12] - z[20] * z[11]
    z[41] = z[35] * z[30] + z[37] * z[28]
    z[44] = z[11] * z[29] - z[12] * z[27]
    z[45] = z[11] * z[30] - z[12] * z[28]
    z[48] = -(z[3]) * z[2] - z[4] * z[1]
    z[63] = z[19] * z[59] - z[20] * z[57]
    z[83] = rhp + u4
    z[84] = lhp + u5
    z[86] = rhpp + rkpp
    z[88] = lhpp + lkpp
    z[94] = rapp + rhpp + rkpp
    z[96] = z[1] * z[44] + z[2] * z[45]
    z[97] = z[1] * z[43] - z[2] * z[42]
    z[98] = z[1] * z[45] - z[2] * z[44]
    z[100] = lapp + lhpp + lkpp
    z[106] = rapp + rhpp + rkpp + rmtppp
    z[108] = z[1] * z[33] + z[2] * z[34]
    z[109] = z[1] * z[32] - z[2] * z[31]
    z[110] = z[1] * z[34] - z[2] * z[33]
    z[112] = lapp + lhpp + lkpp + lmtppp
    z[118] = lffo * z[117]
    z[120] = rap + rhp + rkp
    z[125] = lrfo * z[120]
    z[126] = lrffo * z[120]
    z[147] = lsho * z[146]
    z[148] = z[142] - lsho
    z[163] = ltho * rhp
    z[164] = z[159] - ltho
    z[184] = z[71] * lhp
    z[185] = z[71] + z[180]
    z[207] = z[70] * z[206]
    z[208] = z[70] + z[202]
    z[220] = z[69] * z[215]
    z[221] = lrffo * z[215]
    z[266] = z[68] * z[265]
    z[267] = z[68] + z[259]
    z[278] = lff * (rap + rhp + rkp + rmtpp)
    z[279] = lrf * (rap + rhp + rkp)
    z[280] = lsh * (rhp + rkp)
    z[292] = lffo * z[106]
    z[293] = z[117] + u4 + u6 + u8
    z[294] = (z[118] + lffo * u3 + lffo * u4 + lffo * u6 + lffo * u8) * (u3 + z[293])
    z[295] = lff * z[106]
    z[296] = (z[119] + lff * u3 + lff * u4 + lff * u6 + lff * u8) * (u3 + z[293])
    z[297] = lrfo * z[94]
    z[298] = lrffo * z[94]
    z[299] = z[120] + u4 + u6 + u8
    z[300] = (z[125] + lrfo * u3 + lrfo * u4 + lrfo * u6 + lrfo * u8) * (u3 + z[299])
    z[301] = (z[126] + lrffo * u3 + lrffo * u4 + lrffo * u6 + lrffo * u8) * (u3 + z[299])
    z[302] = z[16] * z[295] + z[15] * z[296]
    z[303] = z[16] * z[296] - z[15] * z[295]
    z[304] = lrf * z[106]
    z[305] = z[302] + (z[135] + lrf * u3 + lrf * u4 + lrf * u6 + lrf * u8) * (u3 + z[293])
    z[306] = z[303] - z[304]
    z[307] = z[11] * z[305] - z[12] * z[306]
    z[308] = z[11] * z[306] + z[12] * z[305]
    z[309] = lsho * z[86]
    z[310] = z[146] + u4 + u6
    z[311] = z[307] + (z[147] + lsho * u3 + lsho * u4 + lsho * u6) * (u3 + z[310])
    z[312] = z[308] - z[309]
    z[313] = lsh * z[86]
    z[314] = z[307] + (z[150] + lsh * u3 + lsh * u4 + lsh * u6) * (u3 + z[310])
    z[315] = z[308] - z[313]
    z[316] = z[7] * z[314] - z[8] * z[315]
    z[317] = z[7] * z[315] + z[8] * z[314]
    z[318] = ltho * rhpp
    z[319] = z[316] + (z[163] + ltho * u3 + ltho * u4) * (u3 + z[83])
    z[320] = z[317] - z[318]
    z[321] = lth * rhpp
    z[322] = z[316] + (z[166] + lth * u3 + lth * u4) * (u3 + z[83])
    z[323] = z[317] - z[321]
    z[324] = z[169] * z[322] + z[171] * z[323]
    z[325] = z[169] * z[323] + z[170] * z[322]
    z[326] = z[71] * lhpp
    z[327] = z[324] - (z[184] + z[71] * u3 + z[71] * u5) * (u3 + z[84])
    z[328] = z[326] + z[325]
    z[329] = lth * lhpp
    z[330] = z[324] - (z[187] + lth * u3 + lth * u5) * (u3 + z[84])
    z[331] = z[329] + z[325]
    z[332] = z[9] * z[330] + z[10] * z[331]
    z[333] = z[9] * z[331] - z[10] * z[330]
    z[334] = z[70] * z[88]
    z[335] = z[206] + u5 + u7
    z[336] = z[332] - (z[207] + z[70] * u3 + z[70] * u5 + z[70] * u7) * (u3 + z[335])
    z[337] = z[334] + z[333]
    z[338] = lsh * z[88]
    z[339] = z[332] - (z[211] + lsh * u3 + lsh * u5 + lsh * u7) * (u3 + z[335])
    z[340] = z[338] + z[333]
    z[341] = z[69] * z[100]
    z[342] = lrffo * z[100]
    z[343] = z[215] + u5 + u7 + u9
    z[344] = (z[220] + z[69] * u3 + z[69] * u5 + z[69] * u7 + z[69] * u9) * (u3 + z[343])
    z[345] = (z[221] + lrffo * u3 + lrffo * u5 + lrffo * u7 + lrffo * u9) * (u3 + z[343])
    z[346] = z[13] * z[339] + z[14] * z[340]
    z[347] = z[13] * z[340] - z[14] * z[339]
    z[348] = lrf * z[100]
    z[349] = z[346] - (z[240] + lrf * u3 + lrf * u5 + lrf * u7 + lrf * u9) * (u3 + z[343])
    z[350] = z[348] + z[347]
    z[351] = z[17] * z[349] + z[18] * z[350]
    z[352] = z[17] * z[350] - z[18] * z[349]
    z[353] = z[68] * z[112]
    z[354] = z[265] + u5 + u7 + u9
    z[355] = z[351] - (z[266] + z[68] * u3 + z[68] * u5 + z[68] * u7 + z[68] * u9) * (u3 + z[354])
    z[356] = z[353] + z[352]
    z[360] = hato * u3
    z[361] = (((-(z[278]) - lff * u3) - lff * u4) - lff * u6) - lff * u8
    z[362] = (((-(z[279]) - lrf * u3) - lrf * u4) - lrf * u6) - lrf * u8
    z[363] = ((-(z[280]) - lsh * u3) - lsh * u4) - lsh * u6
    z[364] = (-(z[166]) - lth * u3) - lth * u4
    z[365] = hatop * u3
    z[366] = lff * (rapp + rhpp + rkpp + rmtppp)
    z[367] = rap + u8
    z[368] = rkp + u6
    z[369] = lrf * (rapp + rhpp + rkpp)
    z[370] = lsh * (rhpp + rkpp)
    z[371] = hatopp - u3 * z[360]
    z[372] = hatop * u3 + z[365]
    z[373] = z[361] * (rmtpp + u3 + z[83] + z[367] + z[368])
    z[374] = z[362] * (u3 + z[83] + z[367] + z[368])
    z[375] = z[363] * (u3 + z[83] + z[368])
    z[376] = z[364] * (u3 + z[83])
    z[390] = z[7] * z[22] + z[8] * z[21]
    z[391] = z[7] * z[23] - z[8] * z[21]
    z[392] = z[7] * z[21] + z[8] * z[23]
    z[393] = z[7] * z[11] - z[8] * z[12]
    z[394] = z[7] * z[12] + z[8] * z[11]
    z[395] = -(z[7]) * z[12] - z[8] * z[11]
    z[396] = z[19] * z[13] - z[20] * z[14]
    z[397] = z[19] * z[14] + z[20] * z[13]
    z[398] = -(z[19]) * z[14] - z[20] * z[13]
    z[399] = z[19] * z[15] + z[20] * z[16]
    z[400] = z[19] * z[16] - z[20] * z[15]
    z[401] = z[20] * z[15] - z[19] * z[16]
    z[723] = rrx1 + lrx1 * z[64] * z[251] + lrx1 * z[66] * z[262] + lrx2 * z[56] * z[227] + lrx2 * z[58] * z[237] + lry1 * z[65] * z[251] + lry1 * z[67] * z[262] + lry2 * z[57] * z[227] + lry2 * z[59] * z[237] + rrx2 * z[31]^2 + rrx2 * z[33]^2 + rry2 * z[31] * z[32] + rry2 * z[33] * z[34] + z[378] * (z[31] * z[32] + z[33] * z[34]) + z[378] * (z[65] * z[251] + z[67] * z[262]) + z[379] * (z[31] * z[32] + z[33] * z[34]) + z[379] * (z[53] * z[194] + z[55] * z[203]) + z[380] * (z[28] * z[139] + z[30] * z[143]) + z[380] * (z[53] * z[194] + z[55] * z[203]) + z[381] * (z[46] * z[160] + z[47] * z[155]) + z[381] * (z[49] * z[181] + z[50] * z[175])
    z[724] = z[377] + rry1 + lrx1 * z[64] * z[252] + lrx1 * z[66] * z[263] + lrx2 * z[56] * z[228] + lrx2 * z[58] * z[238] + lry1 * z[65] * z[252] + lry1 * z[67] * z[263] + lry2 * z[57] * z[228] + lry2 * z[59] * z[238] + rrx2 * z[31] * z[32] + rrx2 * z[33] * z[34] + rry2 * z[32]^2 + rry2 * z[34]^2 + z[378] * (z[32]^2 + z[34]^2) + z[378] * (z[65] * z[252] + z[67] * z[263]) + z[379] * (z[32]^2 + z[34]^2) + z[379] * (z[53] * z[195] + z[55] * z[204]) + z[380] * (z[28] * z[140] + z[30] * z[144]) + z[380] * (z[53] * z[195] + z[55] * z[204]) + z[381] * (z[46] * z[161] + z[47] * z[156]) + z[381] * (z[49] * z[182] + z[50] * z[176])
    z[736] = iff * z[112]
    z[738] = irf * z[100]
    z[740] = ish * z[88]
    z[742] = ith * lhpp
    z[743] = iff * z[106]
    z[744] = irf * z[94]
    z[745] = ish * z[86]
    z[746] = ith * rhpp
    z[747] = mhat + mff * (z[31]^2 + z[33]^2) + mff * (z[251]^2 + z[262]^2) + mrf * (z[31]^2 + z[33]^2) + mrf * (z[194]^2 + z[203]^2) + msh * (z[139]^2 + z[143]^2) + msh * (z[194]^2 + z[203]^2) + mth * (z[155]^2 + z[160]^2) + mth * (z[175]^2 + z[181]^2)
    z[748] = (((mff * (z[245] * z[251] + z[267] * z[262]) + msh * (z[138] * z[139] + z[148] * z[143]) + msh * (z[190] * z[194] + z[208] * z[203]) + mth * (z[153] * z[155] + z[164] * z[160]) + mth * (z[172] * z[175] + z[185] * z[181]) + 0.5 * mrf * ((((2 * z[190] * z[194] + 2 * z[212] * z[203] + 2 * z[69] * z[13] * z[203]) - 2 * z[69] * z[14] * z[194]) - lrffo * z[396] * z[203]) - lrffo * z[398] * z[194])) - z[692] * z[33]) - mhat * (lff * z[33] + lrf * z[44] + lsh * z[29] + lth * z[48] + hato * z[2])) - 0.5 * mrf * (2 * lff * z[33] + lrffo * z[399] * z[33] + lrffo * z[400] * z[31] + lrfo * z[15] * z[33] + lrfo * z[16] * z[31])
    z[749] = mff * (z[31] * z[32] + z[33] * z[34]) + mff * (z[251] * z[252] + z[262] * z[263]) + mrf * (z[31] * z[32] + z[33] * z[34]) + mrf * (z[194] * z[195] + z[203] * z[204]) + msh * (z[139] * z[140] + z[143] * z[144]) + msh * (z[194] * z[195] + z[203] * z[204]) + mth * (z[155] * z[156] + z[160] * z[161]) + mth * (z[175] * z[176] + z[181] * z[182])
    z[750] = (((mff * (z[251] * z[355] + z[262] * z[356]) + msh * (z[139] * z[311] + z[143] * z[312]) + msh * (z[194] * z[336] + z[203] * z[337]) + mth * (z[155] * z[319] + z[160] * z[320]) + mth * (z[175] * z[327] + z[181] * z[328]) + mhat * (((((((((z[1] * z[371] - z[321] * z[48]) - z[366] * z[33]) - z[369] * z[44]) - z[370] * z[29]) - z[2] * z[372]) - z[27] * z[375]) - z[31] * z[373]) - z[42] * z[374]) - z[46] * z[376])) - mff * (z[292] * z[33] - z[31] * z[294])) - 0.5 * mrf * (((((2 * z[295] * z[33] + z[15] * z[297] * z[33] + z[16] * z[297] * z[31] + z[399] * z[298] * z[33] + z[400] * z[298] * z[31] + z[16] * z[33] * z[300]) - 2 * z[31] * z[296]) - z[15] * z[31] * z[300]) - z[399] * z[31] * z[301]) - z[401] * z[33] * z[301])) - 0.5 * mrf * ((((((z[396] * z[342] * z[203] + z[398] * z[342] * z[194] + 2 * z[14] * z[341] * z[194] + 2 * z[13] * z[194] * z[344] + 2 * z[14] * z[203] * z[344]) - 2 * z[13] * z[341] * z[203]) - 2 * z[194] * z[339]) - 2 * z[203] * z[340]) - z[396] * z[194] * z[345]) - z[397] * z[203] * z[345])
    z[751] = mhat + mff * (z[32]^2 + z[34]^2) + mff * (z[252]^2 + z[263]^2) + mrf * (z[32]^2 + z[34]^2) + mrf * (z[195]^2 + z[204]^2) + msh * (z[140]^2 + z[144]^2) + msh * (z[195]^2 + z[204]^2) + mth * (z[156]^2 + z[161]^2) + mth * (z[176]^2 + z[182]^2)
    z[752] = (((mff * (z[245] * z[252] + z[267] * z[263]) + msh * (z[138] * z[140] + z[148] * z[144]) + msh * (z[190] * z[195] + z[208] * z[204]) + mth * (z[153] * z[156] + z[164] * z[161]) + mth * (z[172] * z[176] + z[185] * z[182]) + 0.5 * mrf * ((((2 * z[190] * z[195] + 2 * z[212] * z[204] + 2 * z[69] * z[13] * z[204]) - 2 * z[69] * z[14] * z[195]) - lrffo * z[396] * z[204]) - lrffo * z[398] * z[195])) - z[692] * z[34]) - mhat * ((lff * z[34] + lrf * z[45] + lsh * z[30] + lth * z[46]) - hato * z[1])) - 0.5 * mrf * (2 * lff * z[34] + lrffo * z[399] * z[34] + lrffo * z[400] * z[32] + lrfo * z[15] * z[34] + lrfo * z[16] * z[32])
    z[753] = (((mff * (z[252] * z[355] + z[263] * z[356]) + msh * (z[140] * z[311] + z[144] * z[312]) + msh * (z[195] * z[336] + z[204] * z[337]) + mth * (z[156] * z[319] + z[161] * z[320]) + mth * (z[176] * z[327] + z[182] * z[328]) + mhat * (((((((((z[1] * z[372] + z[2] * z[371]) - z[321] * z[46]) - z[366] * z[34]) - z[369] * z[45]) - z[370] * z[30]) - z[28] * z[375]) - z[32] * z[373]) - z[43] * z[374]) - z[47] * z[376])) - mff * (z[292] * z[34] - z[32] * z[294])) - 0.5 * mrf * (((((2 * z[295] * z[34] + z[15] * z[297] * z[34] + z[16] * z[297] * z[32] + z[399] * z[298] * z[34] + z[400] * z[298] * z[32] + z[16] * z[34] * z[300]) - 2 * z[32] * z[296]) - z[15] * z[32] * z[300]) - z[399] * z[32] * z[301]) - z[401] * z[34] * z[301])) - 0.5 * mrf * ((((((z[396] * z[342] * z[204] + z[398] * z[342] * z[195] + 2 * z[14] * z[341] * z[195] + 2 * z[13] * z[195] * z[344] + 2 * z[14] * z[204] * z[344]) - 2 * z[13] * z[341] * z[204]) - 2 * z[195] * z[339]) - 2 * z[204] * z[340]) - z[396] * z[195] * z[345]) - z[397] * z[204] * z[345])
    z[767] = z[754] + mff * (z[245]^2 + z[267]^2) + msh * (z[138]^2 + z[148]^2) + msh * (z[190]^2 + z[208]^2) + mth * (z[153]^2 + z[164]^2) + mth * (z[172]^2 + z[185]^2) + 0.25 * mrf * (z[755] + 4 * z[756] * z[399] + 4 * z[757] * z[15]) + 0.25 * mrf * (((((z[758] + 4 * z[190]^2 + 4 * z[212]^2 + 8 * z[69] * z[13] * z[212]) - 4 * z[759]) - 8 * z[69] * z[14] * z[190]) - 4 * lrffo * z[190] * z[398]) - 4 * lrffo * z[212] * z[396]) + mhat * (((((z[760] + hato^2 + 2 * z[761] * z[15] + 2 * z[762] * z[21] + 2 * z[763] * z[392] + 2 * z[764] * z[11] + 2 * z[765] * z[393] + 2 * z[766] * z[7]) - 2 * lsh * hato * z[24]) - 2 * lth * hato * z[3]) - 2 * lff * hato * z[110]) - 2 * lrf * hato * z[98])
    z[774] = (z[736] + z[738] + z[740] + z[742] + z[743] + z[744] + z[745] + z[746] + z[692] * z[292] + mff * (z[245] * z[355] + z[267] * z[356]) + msh * (z[138] * z[311] + z[148] * z[312]) + msh * (z[190] * z[336] + z[208] * z[337]) + mth * (z[153] * z[319] + z[164] * z[320]) + mth * (z[172] * z[327] + z[185] * z[328]) + 0.25 * mrf * (((((lrffo * z[298] + lrfo * z[297] + z[768] * z[297] + z[769] * z[298] + 4 * lff * z[295] + 2 * lff * z[15] * z[297] + 2 * lff * z[399] * z[298] + 2 * lrffo * z[399] * z[295] + 2 * lrfo * z[15] * z[295] + z[770] * z[300] + 2 * lff * z[16] * z[300]) - z[771] * z[301]) - 2 * lff * z[401] * z[301]) - 2 * lrffo * z[400] * z[296]) - 2 * lrfo * z[16] * z[296]) + mhat * (((((((((((((((((((lff * z[366] + lrf * z[369] + lsh * z[370] + lth * z[321] + lff * z[15] * z[369] + lff * z[21] * z[370] + lff * z[392] * z[321] + lrf * z[11] * z[370] + lrf * z[15] * z[366] + lrf * z[393] * z[321] + lsh * z[7] * z[321] + lsh * z[11] * z[369] + lsh * z[21] * z[366] + lth * z[7] * z[370] + lth * z[392] * z[366] + lth * z[393] * z[369] + hato * z[372] + lff * z[23] * z[375] + lff * z[391] * z[376] + lrf * z[16] * z[373] + lrf * z[395] * z[376] + lsh * z[12] * z[374] + lsh * z[22] * z[373] + lth * z[4] * z[371] + lth * z[8] * z[375] + lth * z[390] * z[373] + lth * z[394] * z[374]) - hato * z[3] * z[321]) - hato * z[24] * z[370]) - hato * z[366] * z[110]) - hato * z[369] * z[98]) - lff * z[16] * z[374]) - lff * z[108] * z[371]) - lff * z[110] * z[372]) - lrf * z[12] * z[375]) - lrf * z[96] * z[371]) - lrf * z[98] * z[372]) - lsh * z[8] * z[376]) - lsh * z[24] * z[372]) - lsh * z[26] * z[371]) - lth * z[3] * z[372]) - hato * z[4] * z[376]) - hato * z[25] * z[375]) - hato * z[97] * z[374]) - hato * z[109] * z[373])) - 0.25 * mrf * ((((((((((2 * z[768] * z[341] + 2 * z[772] * z[342] + 2 * z[190] * z[398] * z[342] + 2 * z[212] * z[396] * z[342] + 4 * z[14] * z[190] * z[341] + 2 * z[770] * z[344] + 2 * lrffo * z[396] * z[340] + 2 * lrffo * z[398] * z[339] + 4 * z[69] * z[14] * z[339] + 4 * z[13] * z[190] * z[344] + 4 * z[14] * z[212] * z[344]) - 4 * z[69] * z[341]) - lrffo * z[342]) - 4 * z[13] * z[212] * z[341]) - 4 * z[190] * z[339]) - 4 * z[212] * z[340]) - 2 * z[773] * z[345]) - 4 * z[69] * z[13] * z[340]) - 2 * z[190] * z[396] * z[345]) - 2 * z[212] * z[397] * z[345])
    z[809] = z[723] - z[750]
    z[810] = z[724] - z[753]
    z[824] = ((((((z[222] * lrx2 * z[56] + z[222] * lry2 * z[57] + z[241] * lrx2 * z[58] + z[241] * lry2 * z[59] + z[245] * lrx1 * z[64] + z[245] * lry1 * z[65] + z[273] * lrx1 * z[66] + z[273] * lry1 * z[67] + z[378] * (z[245] * z[65] + z[267] * z[67]) + z[380] * (z[138] * z[28] + z[148] * z[30]) + z[380] * (z[190] * z[53] + z[208] * z[55]) + z[381] * (z[153] * z[47] + z[164] * z[46]) + z[381] * (z[172] * z[50] + z[185] * z[49])) - z[725] * z[34]) - lff * (rrx2 * z[33] + rry2 * z[34])) - 0.5 * z[379] * (lrffo * z[41] + lrfo * z[45] + 2 * lff * z[34])) - z[377] * ((lff * z[34] + lrf * z[45] + lsh * z[30] + lth * z[46]) - hato * z[1])) - 0.5 * z[379] * (((lrffo * z[63] - 2 * z[69] * z[59]) - 2 * z[190] * z[53]) - 2 * z[212] * z[55])) - z[774]

    # coef
    coef11 = -(z[747])
    coef12 = -(z[749])
    coef13 = -(z[748])
    coef21 = -(z[749])
    coef22 = -(z[751])
    coef23 = -(z[752])
    coef31 = -(z[748])
    coef32 = -(z[752])
    coef33 = -(z[767])

    # rhs
    rhs1 = -(z[809])
    rhs2 = -(z[810])
    rhs3 = -(z[824])

    # set up system of equations
    coef = @SMatrix [coef11 coef12 coef13; coef21 coef22 coef23; coef31 coef32 coef33]
    rhs = @SVector [rhs1, rhs2, rhs3]

    # derivatives
    q1p = u1
    q2p = u2
    q3p = u3
    @inbounds u1p, u2p, u3p = coef \ rhs

    return @SVector [q1p, q2p, q3p, u1p, u2p, u3p]
end
