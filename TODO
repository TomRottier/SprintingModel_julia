# TODO

## general

[x] refactor parallelisation setup

[x] create new parameter struct without reading from file each time
    - dont need to reset Z array as fixed variables stay fixed, variable ones change
    - do need to reset torque generators to give correct conditions (cc angle, angvel etc)

[x] compare performance of Dierckx.jl with other packages - no real difference

[] find better way to run optimisations
    - [x] dont want to change initial_conditions.csv each time
    - [x] dont want to change parallel_setup.jl to change VCMX
    - still need to chane parallel_setup.jl to change swing data

[x] add functions to calculate forces

[x] quicker way to create and run a model from results.csv

[x] repeat stance phase optimisations

## whole stride optimisations

[x] virtual second contact
    - [x] add a saving callback that saves the force (and any other variables of interest) produced at each timestep
    - [x] fit a function to these variables e.g. rx/ry as functions of time
    - [x] add flag to parameters to signal when second contact occuring
    - [x] set values of virtual contact forces from function

[] maybe need to add air resistance?
    - e.g. initial velocity 10.0 m/s
    - end of stance #1 velocity 10.05 m/s
    - velocity at start of stance #2 10.05 m/s
    - velocity at end of stance #2 = 10.1 m/s
    - accelerating!

[x] rmse comparison to data

[] need to reset saved_values for every optimisation it seems
    - but also don't want saved_values as non-const global - not sure how callbacks will have access to it then?

[] what to do when simulation time longer than matching data
    - use and evaluate functions instead?

[x] not sure virtual stance working in parallel
    - virtual_stance not be reset?
    - it is just need optimisation to find parameters that actually allow a second stance

[x] load_from_results needs to work with different length inputs

[] reduce simulation time

[] redo parameter struct making it more modular?

[] want cc angular velocity to be more stable